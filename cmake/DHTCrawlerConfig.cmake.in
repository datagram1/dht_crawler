@PACKAGE_INIT@

# Include the targets file
include("${CMAKE_CURRENT_LIST_DIR}/DHTCrawlerTargets.cmake")

# Set package properties
set(DHTCRAWLER_VERSION @PROJECT_VERSION@)
set(DHTCRAWLER_VERSION_MAJOR @PROJECT_VERSION_MAJOR@)
set(DHTCRAWLER_VERSION_MINOR @PROJECT_VERSION_MINOR@)
set(DHTCRAWLER_VERSION_PATCH @PROJECT_VERSION_PATCH@)
set(DHTCRAWLER_BUILD_NUMBER @CURRENT_BUILD_NUMBER@)
set(DHTCRAWLER_PLATFORM "@PLATFORM_NAME@")

# Check required components
check_required_components(DHTCrawler)

# Find required dependencies
find_dependency(PkgConfig REQUIRED)
pkg_check_modules(LIBTORRENT REQUIRED libtorrent-rasterbar)

# Find MySQL
find_library(MYSQL_LIBRARY NAMES mysqlclient libmysqlclient)
find_path(MYSQL_INCLUDE_DIR mysql/mysql.h)
if(MYSQL_LIBRARY AND MYSQL_INCLUDE_DIR)
    set(MYSQL_FOUND TRUE)
    set(MYSQL_LIBRARIES ${MYSQL_LIBRARY})
    set(MYSQL_INCLUDE_DIRS ${MYSQL_INCLUDE_DIR})
endif()

# Platform-specific libraries
if(APPLE)
    find_library(CORE_FOUNDATION CoreFoundation)
    find_library(SYSTEM_CONFIGURATION SystemConfiguration)
    find_library(SECURITY Security)
    set(DHTCRAWLER_PLATFORM_LIBS ${CORE_FOUNDATION} ${SYSTEM_CONFIGURATION} ${SECURITY})
elseif(WIN32)
    set(DHTCRAWLER_PLATFORM_LIBS ws2_32 wsock32)
elseif(UNIX)
    find_package(Threads REQUIRED)
    set(DHTCRAWLER_PLATFORM_LIBS ${CMAKE_THREAD_LIBS_INIT})
endif()

# Set variables for consumers
set(DHTCRAWLER_LIBRARIES ${LIBTORRENT_LIBRARIES} ${MYSQL_LIBRARIES} ${DHTCRAWLER_PLATFORM_LIBS})
set(DHTCRAWLER_INCLUDE_DIRS ${LIBTORRENT_INCLUDE_DIRS} ${MYSQL_INCLUDE_DIRS})

# Print package information
message(STATUS "Found DHTCrawler ${DHTCRAWLER_VERSION} (Build ${DHTCRAWLER_BUILD_NUMBER})")
message(STATUS "  Platform: ${DHTCRAWLER_PLATFORM}")
message(STATUS "  LibTorrent: ${LIBTORRENT_VERSION}")
message(STATUS "  MySQL: ${MYSQL_LIBRARY}")
